@model List<Movie>

<form method="get" asp-action="Index" asp-controller="Movies">
    <input type="text" name="searchString" placeholder="Search...">
    <button type="submit">Search</button>
    @if (!string.IsNullOrEmpty(ViewBag.SearchString))
    {
        <a class="justify-content-end" href="@Url.Action("Index")">Back to all movies</a>
    }
    <!-- move this element to the end of the form -->
    <button type="button" onclick="window.location.href='@Url.Action("Create", "Movies")'" class="justify-content-end ms-2" > Create New Movies</button>
</form>
<table class="table">
    <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Name</th>
            <th scope="col">IMDB Rating</th>
            <th scope="col">Industry</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var movie in Model)
        {
            <tr>
                <th scope="row">@movie.Id</th>
                <td>@Html.Raw(string.Format("{0}", HighlightText(movie.Name, ViewBag.SearchString)))</td>
                <td>@movie.ImdbRating</td>
                <td>@Html.Raw(string.Format("{0}", HighlightText(movie.Industry, ViewBag.SearchString)))</td>
            </tr>
        }
    </tbody>
</table>
@if (Model.Count > 0)
{
<nav>
<ul class="pagination">
@{
int totalPages = ViewBag.TotalPages;
int currentPage = ViewBag.CurrentPage;
}
            @if (currentPage > 1)
            {
                <li class="page-item"><a class="page-link" href="?page=@(currentPage-1)@(!string.IsNullOrEmpty(ViewBag.SearchString) ? $"&searchString={ViewBag.SearchString}" : "")">Previous</a></li>
            }

            @for (int i = 1; i <= totalPages; i++)
            {
                if (i == currentPage)
                {
                    <li class="page-item active"><a class="page-link">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" href="?page=@i@(!string.IsNullOrEmpty(ViewBag.SearchString) ? $"&searchString={ViewBag.SearchString}" : "")">@i</a></li>
                }
            }

            @if (currentPage < totalPages)
            {
                <li class="page-item"><a class="page-link" href="?page=@(currentPage+1)@(!string.IsNullOrEmpty(ViewBag.SearchString) ? $"&searchString={ViewBag.SearchString}" : "")">Next</a></li>
            }
        </ul>
    </nav>
}

@functions {
    public static string HighlightText(string text, string searchString)
    {
        if (!string.IsNullOrEmpty(searchString) && text.Contains(searchString))
        {
            return text.Replace(searchString, $"<span style='background-color: yellow'>{searchString}</span>", StringComparison.InvariantCultureIgnoreCase);
        }
        else
        {
            return text;
        }
    }
}